version: 2.1
orbs:
    node: circleci/node@4.2.0

jobs:
    build-frontend:
        working_directory: "~/project"
        executor:
            name: node/default
            tag: "14.16.0"
        steps:
            - checkout
            - run:
                  name: Create .npmrc file
                  command: |
                      cd client
                      touch .npmrc
                      echo //npm.fontawesome.com/:_authToken=${FA_KEY} >> .npmrc
                      echo @fortawesome:registry=https://npm.fontawesome.com/ >> .npmrc
                      echo /npm.greensock.com/:_authToken=${GS_KEY} >> .npmrc
                      echo @gsap:registry=https://npm.greensock.com >> .npmrc
            - node/install-packages:
                  app-dir: "~/project/client"
                  override-ci-command: npm install
                  cache-version: v2
            - run:
                  name: Run NPM tests
                  command: ls
            - persist_to_workspace:
                  root: ~/project/build/
                  paths:
                      - client


    build-backend:
        working_directory: "~/project"
        executor:
            name: node/default
            tag: "14.16.0"
        steps:
            - checkout
            - run:
                  name: Attach environment variables
                  command: |
                      cd server
                      echo ENVIRONMENT=production > ".env"
            - node/install-packages:
                  app-dir: "~/project/server"
                  override-ci-command: npm install
            - run:
                  command: ls
                  name: Run NPM tests
            -  persist_to_workspace:
                   root: ~/project/build/
                   paths:
                       - server


    deploy-app:
        working_directory: "~/project"
        docker:
            - image: cimg/base:2020.01
        steps:
            - add_ssh_keys:
                  fingerprints: [ "e2:1c:76:aa:29:61:db:ca:a1:d3:c2:59:c6:0c:b1:b9" ]
            - run:
                  command: |
                      cd client
                      ls -la
                  name: Run NPM tests
            - run:
                  name: Install dependencies
                  no_output_timeout: 30m
                  command: |
                      sudo apt update --yes
                      sudo apt install software-properties-common --yes
                      sudo apt-add-repository --yes --update ppa:ansible/ansible --yes
                      sudo apt install ansible --yes
                      cd .circleci/ansible
                      ansible-playbook -i inventory.txt playbook.yml
            - run:
                  name: Configure server
                  no_output_timeout: 30m
                  command: |
                      echo ENVIRONMENT=production > "server/.env"
                      ls
                      cat server/.env
                      exit 0

workflows:
    test_my_app:
        jobs:
            - build-frontend
            - build-backend
